{"version":3,"sources":["components/Header.js","components/TodoItem.js","components/TodoList.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["Header","style","padding","lineHeight","fontSize","marginBottom","TodoItem","props","todo","id","title","completed","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","fontStyle","color","opacity","textDecoration","TodoList","todos","map","key","InputTodo","state","ev","setState","target","value","handleSubmit","preventDefault","addTodoProps","onSubmit","this","placeholder","React","Component","TodoContainer","uuidv4","handleChange","deleteTodo","filter","addTodoItem","newTodo","ReactDOM","render","document","getElementById"],"mappings":"gOA0BeA,EAxBA,WAQX,OAEI,4BAAQC,MARQ,CAEhBC,QAAS,SACTC,WAAY,QAOR,wBAAIF,MAAO,CAAEG,SAAU,OAAQC,aAAc,SAA7C,mBAIA,uBAAGJ,MAAO,CAAEG,SAAU,SAAtB,uDCkBGE,EAlCE,SAACC,GAEd,IAFwB,EAUSA,EAAMC,KAA/BC,EAVgB,EAUhBA,GAAIC,EAVY,EAUZA,MAAOC,EAVK,EAULA,UAEnB,OAEI,wBAAIC,UAAU,aAEV,2BACIC,KAAK,WACLC,QAASH,EACTI,SAAU,kBAAMR,EAAMS,kBAAkBP,MAG5C,4BAAQQ,QAAS,kBAAMV,EAAMW,gBAAgBT,KAA7C,UAIA,0BAAMR,MAAOU,EAxBE,CAEnBQ,UAAW,SACXC,MAAO,UACPC,QAAS,GACTC,eAAgB,gBAmB8B,MACrCZ,KCHFa,EAtBE,SAAChB,GAEd,OAEI,6BAEI,qDAECA,EAAMiB,MAAMC,KAAI,SAAAjB,GAAI,OAEjB,kBAAC,EAAD,CACIkB,IAAKlB,EAAKC,GACVD,KAAMA,EACNQ,kBAAmBT,EAAMS,kBACzBE,gBAAiBX,EAAMW,uBCgC5BS,E,4MAxCXC,MAAQ,CAEJlB,MAAO,I,EAGXK,SAAW,SAACc,GAER,EAAKC,SAAS,CACVpB,MAAOmB,EAAGE,OAAOC,S,EAIzBC,aAAe,SAAAJ,GAEXA,EAAGK,iBACH,EAAK3B,MAAM4B,aAAa,EAAKP,MAAMlB,OACnC,EAAKoB,SAAS,CAAEpB,MAAO,M,uDAKvB,OAEI,0BAAM0B,SAAUC,KAAKJ,aAAcrB,UAAU,kBAEzC,2BACIC,KAAK,OACLD,UAAU,aACV0B,YAAY,cACZN,MAAOK,KAAKT,MAAMlB,MAClBK,SAAUsB,KAAKtB,WAGnB,2BAAOF,KAAK,SAASD,UAAU,eAAeoB,MAAM,gB,GAnC5CO,IAAMC,WCiFfC,E,4MAhFXb,MAAQ,CAEJJ,MAAO,CAEH,CACIf,GAAIiC,cACJhC,MAAO,+BACPC,WAAW,GAEf,CACIF,GAAIiC,cACJhC,MAAO,kCACPC,WAAW,GAEf,CACIF,GAAIiC,cACJhC,MAAO,wBACPC,WAAW,K,EAKvBgC,aAAe,SAAClC,GAEZ,EAAKqB,SAAS,CAEVN,MAAO,EAAKI,MAAMJ,MAAMC,KAAI,SAAAjB,GAMxB,OAJIA,EAAKC,KAAOA,IACZD,EAAKG,WAAaH,EAAKG,WAGpBH,Q,EAKnBoC,WAAa,SAACnC,GAEV,EAAKqB,SAAS,CAEVN,MAAM,YAAM,EAAKI,MAAMJ,MAAMqB,QAAO,SAAArC,GAAU,OAAOA,EAAKC,KAAOA,S,EAIzEqC,YAAc,SAACpC,GAEX,IAAMqC,EAAU,CAEZtC,GAAIiC,cACJhC,MAAOA,EACPC,WAAW,GAGf,EAAKmB,SAAS,CACVN,MAAM,GAAD,mBAAO,EAAKI,MAAMJ,OAAlB,CAAyBuB,O,uDAMlC,OAEI,yBAAKnC,UAAU,aAEX,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAAWuB,aAAcE,KAAKS,cAE9B,kBAAC,EAAD,CACItB,MAAOa,KAAKT,MAAMJ,MAClBR,kBAAmBqB,KAAKM,aACxBzB,gBAAiBmB,KAAKO,kB,GA1EdL,IAAMC,W,MCClCQ,IAASC,OAAO,kBAAC,EAAD,MAAmBC,SAASC,eAAe,U","file":"static/js/main.424dbbf3.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Header = () => {\n\n    const headerStyle = {\n\n        padding: \"20px 0\",\n        lineHeight: \"2em\",\n    }\n\n    return (\n\n        <header style={headerStyle}>\n\n            <h1 style={{ fontSize: \"50px\", marginBottom: \"15px\" }}>\n                Simple Todo App\n            </h1>\n\n            <p style={{ fontSize: \"20px\" }}>\n                Please add to-dos item(s) through the input field\n            </p>\n\n        </header>\n    )\n}\n\nexport default Header;\n","import React from 'react';\n\nconst TodoItem = (props) => {\n\n    const completedStyle = {\n\n        fontStyle: 'italic',\n        color: '#d35e0f',\n        opacity: 0.4,\n        textDecoration: 'line-through'\n    }\n\n    const { id, title, completed } = props.todo;\n\n    return (\n\n        <li className=\"todo-item\">\n\n            <input\n                type=\"checkbox\"\n                checked={completed}\n                onChange={() => props.handleChangeProps(id)}\n            />\n\n            <button onClick={() => props.deleteTodoProps(id)}>\n                Delete\n            </button>\n\n            <span style={completed ? completedStyle : null}>\n                {title}\n            </span>\n\n        </li>\n    );\n}\n\nexport default TodoItem;\n","import React from 'react';\n\nimport TodoItem from './TodoItem';\n\nconst TodoList = (props) => {\n\n    return (\n\n        <div>\n\n            <h1>testje from todo list</h1>\n\n            {props.todos.map(todo => (\n\n                <TodoItem\n                    key={todo.id}\n                    todo={todo} \n                    handleChangeProps={props.handleChangeProps}\n                    deleteTodoProps={props.deleteTodoProps}\n                />\n            ))}\n\n        </div>\n    );\n}\n\nexport default TodoList;\n","// import React, { Component } from 'react';\n\n// class InputTodo extends Component {\n\n// }\n\nimport React from 'react';\n\nclass InputTodo extends React.Component {\n\n    state = {\n\n        title: ''\n    }\n\n    onChange = (ev) => {\n\n        this.setState({\n            title: ev.target.value\n        });\n    };\n\n    handleSubmit = ev => {\n\n        ev.preventDefault();\n        this.props.addTodoProps(this.state.title);\n        this.setState({ title: '' });\n    };\n\n    render() {\n\n        return (\n\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\n\n                <input \n                    type=\"text\" \n                    className=\"input-text\" \n                    placeholder=\"Add Todo...\" \n                    value={this.state.title} \n                    onChange={this.onChange}\n                />\n\n                <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\n                \n            </form>\n        );\n    }\n}\n\nexport default InputTodo;\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid'; // unique random id\n\nimport Header from './Header';\nimport TodoList from './TodoList';\nimport InputTodo from './InputTodo';\n\nclass TodoContainer extends React.Component {\n\n    state = {\n\n        todos: [\n\n            {\n                id: uuidv4(), \n                title: 'Setup development evironment',\n                completed: true\n            },\n            {\n                id: uuidv4(),\n                title: 'Develop website and add content',\n                completed: false\n            },\n            {\n                id: uuidv4(),\n                title: 'Deploy to live server',\n                completed: false\n            }\n        ]\n    };\n\n    handleChange = (id) => {\n\n        this.setState({\n\n            todos: this.state.todos.map(todo => {\n\n                if (todo.id === id) {\n                    todo.completed = !todo.completed;\n                }\n\n                return todo;\n            })\n        });\n    }\n\n    deleteTodo = (id) => {\n        \n        this.setState({\n\n            todos: [ ...this.state.todos.filter(todo => { return todo.id !== id; })  ]\n        });\n    }\n\n    addTodoItem = (title) => {\n\n        const newTodo = {\n\n            id: uuidv4(),\n            title: title,\n            completed: false\n        };\n\n        this.setState({\n            todos: [ ...this.state.todos, newTodo ]\n        });\n    }\n\n    render() {\n\n        return (\n\n            <div className=\"container\">\n\n                <Header />\n\n                <InputTodo addTodoProps={this.addTodoItem} />\n\n                <TodoList\n                    todos={this.state.todos}\n                    handleChangeProps={this.handleChange} \n                    deleteTodoProps={this.deleteTodo}\n                />\n\n            </div>\n        );\n    }\n}\n\nexport default TodoContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport TodoContainer from './components/TodoContainer';\n\nimport './css/App.css';\n\n\nReactDOM.render(<TodoContainer />, document.getElementById('root'));\n"],"sourceRoot":""}